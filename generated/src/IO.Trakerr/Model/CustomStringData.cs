/* 
 * Trakerr API
 *
 * Get your application events and errors to Trakerr via the *Trakerr API*.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Trakerr.Model
{
    /// <summary>
    /// CustomStringData
    /// </summary>
    [DataContract]
    public partial class CustomStringData :  IEquatable<CustomStringData>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomStringData" /> class.
        /// </summary>
        /// <param name="CustomData1">CustomData1.</param>
        /// <param name="CustomData2">CustomData2.</param>
        /// <param name="CustomData3">CustomData3.</param>
        /// <param name="CustomData4">CustomData4.</param>
        /// <param name="CustomData5">CustomData5.</param>
        /// <param name="CustomData6">CustomData6.</param>
        /// <param name="CustomData7">CustomData7.</param>
        /// <param name="CustomData8">CustomData8.</param>
        /// <param name="CustomData9">CustomData9.</param>
        /// <param name="CustomData10">CustomData10.</param>
        public CustomStringData(string CustomData1 = null, string CustomData2 = null, string CustomData3 = null, string CustomData4 = null, string CustomData5 = null, string CustomData6 = null, string CustomData7 = null, string CustomData8 = null, string CustomData9 = null, string CustomData10 = null)
        {
            this.CustomData1 = CustomData1;
            this.CustomData2 = CustomData2;
            this.CustomData3 = CustomData3;
            this.CustomData4 = CustomData4;
            this.CustomData5 = CustomData5;
            this.CustomData6 = CustomData6;
            this.CustomData7 = CustomData7;
            this.CustomData8 = CustomData8;
            this.CustomData9 = CustomData9;
            this.CustomData10 = CustomData10;
        }
        
        /// <summary>
        /// Gets or Sets CustomData1
        /// </summary>
        [DataMember(Name="customData1", EmitDefaultValue=false)]
        public string CustomData1 { get; set; }
        /// <summary>
        /// Gets or Sets CustomData2
        /// </summary>
        [DataMember(Name="customData2", EmitDefaultValue=false)]
        public string CustomData2 { get; set; }
        /// <summary>
        /// Gets or Sets CustomData3
        /// </summary>
        [DataMember(Name="customData3", EmitDefaultValue=false)]
        public string CustomData3 { get; set; }
        /// <summary>
        /// Gets or Sets CustomData4
        /// </summary>
        [DataMember(Name="customData4", EmitDefaultValue=false)]
        public string CustomData4 { get; set; }
        /// <summary>
        /// Gets or Sets CustomData5
        /// </summary>
        [DataMember(Name="customData5", EmitDefaultValue=false)]
        public string CustomData5 { get; set; }
        /// <summary>
        /// Gets or Sets CustomData6
        /// </summary>
        [DataMember(Name="customData6", EmitDefaultValue=false)]
        public string CustomData6 { get; set; }
        /// <summary>
        /// Gets or Sets CustomData7
        /// </summary>
        [DataMember(Name="customData7", EmitDefaultValue=false)]
        public string CustomData7 { get; set; }
        /// <summary>
        /// Gets or Sets CustomData8
        /// </summary>
        [DataMember(Name="customData8", EmitDefaultValue=false)]
        public string CustomData8 { get; set; }
        /// <summary>
        /// Gets or Sets CustomData9
        /// </summary>
        [DataMember(Name="customData9", EmitDefaultValue=false)]
        public string CustomData9 { get; set; }
        /// <summary>
        /// Gets or Sets CustomData10
        /// </summary>
        [DataMember(Name="customData10", EmitDefaultValue=false)]
        public string CustomData10 { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomStringData {\n");
            sb.Append("  CustomData1: ").Append(CustomData1).Append("\n");
            sb.Append("  CustomData2: ").Append(CustomData2).Append("\n");
            sb.Append("  CustomData3: ").Append(CustomData3).Append("\n");
            sb.Append("  CustomData4: ").Append(CustomData4).Append("\n");
            sb.Append("  CustomData5: ").Append(CustomData5).Append("\n");
            sb.Append("  CustomData6: ").Append(CustomData6).Append("\n");
            sb.Append("  CustomData7: ").Append(CustomData7).Append("\n");
            sb.Append("  CustomData8: ").Append(CustomData8).Append("\n");
            sb.Append("  CustomData9: ").Append(CustomData9).Append("\n");
            sb.Append("  CustomData10: ").Append(CustomData10).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as CustomStringData);
        }

        /// <summary>
        /// Returns true if CustomStringData instances are equal
        /// </summary>
        /// <param name="other">Instance of CustomStringData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomStringData other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CustomData1 == other.CustomData1 ||
                    this.CustomData1 != null &&
                    this.CustomData1.Equals(other.CustomData1)
                ) && 
                (
                    this.CustomData2 == other.CustomData2 ||
                    this.CustomData2 != null &&
                    this.CustomData2.Equals(other.CustomData2)
                ) && 
                (
                    this.CustomData3 == other.CustomData3 ||
                    this.CustomData3 != null &&
                    this.CustomData3.Equals(other.CustomData3)
                ) && 
                (
                    this.CustomData4 == other.CustomData4 ||
                    this.CustomData4 != null &&
                    this.CustomData4.Equals(other.CustomData4)
                ) && 
                (
                    this.CustomData5 == other.CustomData5 ||
                    this.CustomData5 != null &&
                    this.CustomData5.Equals(other.CustomData5)
                ) && 
                (
                    this.CustomData6 == other.CustomData6 ||
                    this.CustomData6 != null &&
                    this.CustomData6.Equals(other.CustomData6)
                ) && 
                (
                    this.CustomData7 == other.CustomData7 ||
                    this.CustomData7 != null &&
                    this.CustomData7.Equals(other.CustomData7)
                ) && 
                (
                    this.CustomData8 == other.CustomData8 ||
                    this.CustomData8 != null &&
                    this.CustomData8.Equals(other.CustomData8)
                ) && 
                (
                    this.CustomData9 == other.CustomData9 ||
                    this.CustomData9 != null &&
                    this.CustomData9.Equals(other.CustomData9)
                ) && 
                (
                    this.CustomData10 == other.CustomData10 ||
                    this.CustomData10 != null &&
                    this.CustomData10.Equals(other.CustomData10)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CustomData1 != null)
                    hash = hash * 59 + this.CustomData1.GetHashCode();
                if (this.CustomData2 != null)
                    hash = hash * 59 + this.CustomData2.GetHashCode();
                if (this.CustomData3 != null)
                    hash = hash * 59 + this.CustomData3.GetHashCode();
                if (this.CustomData4 != null)
                    hash = hash * 59 + this.CustomData4.GetHashCode();
                if (this.CustomData5 != null)
                    hash = hash * 59 + this.CustomData5.GetHashCode();
                if (this.CustomData6 != null)
                    hash = hash * 59 + this.CustomData6.GetHashCode();
                if (this.CustomData7 != null)
                    hash = hash * 59 + this.CustomData7.GetHashCode();
                if (this.CustomData8 != null)
                    hash = hash * 59 + this.CustomData8.GetHashCode();
                if (this.CustomData9 != null)
                    hash = hash * 59 + this.CustomData9.GetHashCode();
                if (this.CustomData10 != null)
                    hash = hash * 59 + this.CustomData10.GetHashCode();
                return hash;
            }
        }
    }

}
